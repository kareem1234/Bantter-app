{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid102\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid103\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid202\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{square\}}{\leveltext\leveltemplateid203\'01\uc0\u9642 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid402\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid602\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid702\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11900\paperh16840\margl1440\margr1440\vieww23800\viewh15660\viewkind0
\deftab720
\pard\pardeftab720\sa420\qc

\f0\b\fs64 \cf0 COMP 3007 Assignment Guidelines\
\pard\pardeftab720\sa320

\b0\fs32 \cf0 \
Before we begin with the guidelines please note:\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls1\ilvl0\cf0 {\listtext	\'95	}Any files that are not loadable or faking testing will result in you receiving 0 marks for that question\
{\listtext	\'95	}The TAs have the right to dock marks for not following the assignments guidelines as presented below (in particular, the documentation standards)\
\pard\pardeftab720\sa320
\cf0 \
In no particular order, here is a list of guidelines for Comp 3007 assignments...\
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls2\ilvl0
\b \cf0 {\listtext	\'95	}Handing it in
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls2\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Assignments are submitted online. The following should be included in your assignment:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160
\ls2\ilvl2\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}At least one text file (use .rkt or .scm file extension) 
\b for each
\b0  coding question (you may need to separate questions into more than one file for simplicity, ie. the question asks for two versions of a function) as well as a readme file explaining what files are for which questions and any necessary instructions we need to test your code. 
\b \ul Do not hand in one file containing all your code
\b0 \ulnone . Also, 
\b ensure each file is loadable in Racket/Scheme.
\b0 \
{\listtext	
\f1 \uc0\u9642 
\f0 	}A text file containing the 
\b actual Scheme transcript (if using MIT Scheme) or Interactions (if using DrRacket)
\b0  of your testing (comments can be added to your testing transcript but please do not remove anything, we want to see that these are tests that you have actually conducted). Again, please include 
\b at least one file for each question
\b0 . Preferably, the files containing your testing should match up 1-to-1 with the files containing your code. e.g. if you hand in question1.scm, question2a.scm and question2b.scm, separate your testing output into question1-testing.txt, question2a-testing.txt, question2b-testing.txt.\
\pard\tx560\tx1120\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls3\ilvl0
\b \cf0 {\listtext	\'95	}Documentation
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls3\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Documentation should consist of at least:\
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160
\ls3\ilvl2\cf0 {\listtext	
\f1 \uc0\u9642 
\f0 	}A readme file with any instructions for your code, which Scheme you used (preferably DrRacket), and any major assumptions you have made, at the very least.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Comments above each function that explain the function including what the function does/its general implementation, the arguments it takes, what it returns, and any other information to explain your code. Please avoid embedding comments inside the code, place the comments off to the side if you feel it necessary so the code remains readable.\
{\listtext	
\f1 \uc0\u9642 
\f0 	}Comments in your testing as to what you are testing and why, giving expected output is always a good idea (this can be written by hand if you wish) as well as giving any noteworthy observations (ie. an iterative process is much faster and can handle a larger number of recursive calls than a recursive process).\
\pard\tx560\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls4\ilvl0
\b \cf0 {\listtext	\'95	}Testing
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls4\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Testing is a large portion of your assignment. Testing ensures the code works (for the successful tests at least), shows limitations of your code (it's better not to try and hide these as they are usually found by someone), and can teach you something about how the language works.\
{\listtext	
\f1 \uc0\u9702 
\f0 	}There is no simple answer as to how much testing should be done. There are standard tests that must be done (base case, testing of some upper or lower bounds of the input or results, etc.) but it is up to you to come up with a sufficient testing scheme.\
{\listtext	
\f1 \uc0\u9702 
\f0 	}Do not do unnecessary testing (testing a factorial method for every number between 1 and 100 is unnecessary and annoying to read through).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls4\ilvl1
\b \cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Provide a text file containing the \ul transcript\ulnone  (MITScheme) or \ul Interactions\ulnone  (DrRacket) showing your testing.
\b0  If you are placing your Scheme test code in a file, make sure to display the test case you are running before each result. This will make the transcript more readable. Ex.\
\pard\tx560\tx1120\pardeftab720

\f1 \cf0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls5\ilvl1
\f0 \cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}(write-line "Test case #1 --> Testing (factorial 0) ==> expect 1")\
{\listtext	
\f1 \uc0\u9702 
\f0 	}(write-line (factorial 0))\
{\listtext	
\f1 \uc0\u9702 
\f0 	}(write-line "Test case #2 --> Testing (factorial 1) ==> expect 1")\
{\listtext	
\f1 \uc0\u9702 
\f0 	}(write-line (factorial 1))\
{\listtext	
\f1 \uc0\u9702 
\f0 	}etc.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls5\ilvl1
\b \cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Note:
\b0  -- Write-line does not work in DrRacket, you can replace it with 
\b write
\b0  and place 
\b (newline)
\b0  to format the output.\
\pard\tx560\tx1120\pardeftab720
\cf0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls6\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Be sure to test all combinations of variables and constants for each of your Prolog facts and rules. They may not work in some cases but any limitations of your code should be documented\
{\listtext	
\f1 \uc0\u9702 
\f0 	}Be sure to 
\b always
\b0  hit semicolon when testing in Prolog. It's possible that you will start getting incorrect results.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls6\ilvl1
\b \cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}DO NOT FAKE TEST OUTPUT!
\b0  If you are caught faking test output the entire question will be assumed incorrect and you will be given a 0 for that question.\
{\listtext	
\f1 \uc0\u9702 
\f0 	}Be intelligent with your testing. Good testing shows us that you understand the concepts we are trying to teach you in this course. As an example, when we ask you to implement a function recursively and then iteratively there is a reason for it. Your testing should show you understand the difference between the two.\
\pard\tx560\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls7\ilvl0
\b \cf0 {\listtext	\'95	}The Code
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls7\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Label function names and parameters with appropriate descriptive names\
{\listtext	
\f1 \uc0\u9702 
\f0 	}Your code should be neatly separated onto several lines and indented accordingly. We will not follow strict guidelines for formatting but the code should be neatly presented and easy to read. 
\b Do not put an entire function on one line and at no point should your code run off the page
\b0 .\
\pard\tx560\pardeftab720
\cf0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720
\ls8\ilvl0
\b \cf0 {\listtext	\'95	}Error Checking
\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440
\ls8\ilvl1\cf0 {\listtext	
\f1 \uc0\u9702 
\f0 	}Limit your error checking and don't do type-checking. If the function is supposed to take in an integer, you don't have to add code to check if it's an integer. Scheme (like Smalltalk) is a weakly typed language and as such, functions should not type-check. This allows for better code reuse.\
{\listtext	
\f1 \uc0\u9702 
\f0 	}Some testing of various inputs is valid but be reasonable. Don't test a mathematical function like factorial with every possible data type you can think of (characters, strings, etc).\
\pard\tx560\tx1120\pardeftab720
\cf0 \
\
}